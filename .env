# run from project root
export AIRFLOW_HOME=$(pwd)/airflow
export KAGGLE_USERNAME=rohitconnects
export KAGGLE_KEY=f2bfc9802d2ccefbe7064487e59e8477

export MINIO_ROOT_USER="minioadmin"
export MINIO_ROOT_PASSWORD="minioadmin"

echo "AIRFLOW_HOME is set to: $AIRFLOW_HOME"

/Users/rohityadav/ry_workspace/dev_ry_python_pipeline/python-airflow-snowflake-data-pipeline/venv/bin/airflow users create \
    --username admin \
    --firstname Rohit \
    --lastname Yadav \
    --role Admin \
    --email roityadav@gmail.com

# password  - 111

export KAGGLE_USERNAME=rohitconnects
export KAGGLE_KEY=f2bfc9802d2ccefbe7064487e59e8477


#Minio detail
MinIO Object Storage Server
Copyright: 2015-2025 MinIO, Inc.
License: GNU AGPLv3 - https://www.gnu.org/licenses/agpl-3.0.html
Version: RELEASE.2025-05-24T17-08-30Z (go1.24.3 darwin/arm64)

API: http://192.168.31.161:9000  http://127.0.0.1:9000 
   RootUser: minioadmin 
   RootPass: minioadmin 

WebUI: http://192.168.31.161:61831 http://127.0.0.1:61831           
   RootUser: minioadmin 
   RootPass: minioadmin 

CLI: https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart
   $ mc alias set 'myminio' 'http://192.168.31.161:9000' 'minioadmin' 'minioadmin'

Docs: https://docs.min.io
WARN: Detected default credentials 'minioadmin:minioadmin', we recommend that you change these values with 'MINIO_ROOT_USER' and 'MINIO_ROOT_PASSWORD' environment variables

# Starting airflow webserver and scheduler
First move to airflow directory inside your project repository
here it is /Users/rohityadav/ry_workspace/dev_ry_python_pipeline/python-airflow-snowflake-data-pipeline/airflow
# Start the Airflow webserver
airflow webserver --port 8080 --daemon
# Start the Airflow scheduler
airflow scheduler --daemon
# To stop the Airflow webserver and scheduler
airflow webserver --stop
airflow scheduler --stop
# To check the status of Airflow webserver and scheduler
airflow webserver --status
airflow scheduler --status
# To restart the Airflow webserver and scheduler
airflow webserver --restart
airflow scheduler --restart
# To check the logs of Airflow webserver and scheduler
airflow webserver --log-file
airflow scheduler --log-file
# To access the Airflow UI, open your web browser and go to http://localhost:8080
# To create a new Airflow user, run the following command
# airflow users create \
#     --username admin \
#     --firstname Rohit \
#     --lastname Yadav \
#     --role Admin \
#     --email roityadav@gmail.com
# To run the Airflow CLI commands, you need to activate the virtual environment first
# source /Users/rohityadav/ry_workspace/dev_ry_python_pipeline/python-airflow-snowflake-data-pipeline/venv/bin/activate
# To deactivate the virtual environment, run the following command
# deactivate
# To run the Airflow CLI commands, you need to activate the virtual environment first
# source /Users/rohityadav/ry_workspace/dev_ry_python_pipeline/python-airflow-snowflake-data-pipeline/venv/bin/activate
# To deactivate the virtual environment, run the following command
# deactivate


# Starating MinIO server
# To start the MinIO server, run the following command
# minio server /Users/rohityadav/ry_workspace/dev_ry_python_pipeline/python-airflow-snowflake-data-pipeline/minio/data --address :9000 --console-address :61831
# To stop the MinIO server, press Ctrl+C in the terminal where the server is running
# To check the status of MinIO server, run the following command
# minio server status
# To access the MinIO web interface, open your web browser and go to http://localhost:61831
# To create a new MinIO user, run the following command
# mc admin user add myminio newuser newpassword
# To list all MinIO users, run the following command
# mc admin user list myminio
# To delete a MinIO user, run the following command
# mc admin user remove myminio newuser
# To create a new MinIO bucket, run the following command
# mc mb myminio/mybucket
# To list all MinIO buckets, run the following command
# mc ls myminio
# To delete a MinIO bucket, run the following command       



export MINIO_ROOT_USER="minioadmin"
export MINIO_ROOT_PASSWORD="minioadmin"
export MINIO_SERVER_URL="http://localhost:9000"
export MINIO_BROWSER_REDIRECT_URL="http://localhost:9001"


# Understanding Your MinIO Server Startup
# The command you used (minio server /path/to/data) starts MinIO with its default settings. This means:

# It's not currently using your minio_config.yaml file. The --config flag is what tells MinIO to load settings from that YAML file.
# It will rely on the default credentials (minioadmin/minioadmin) unless you export MINIO_ROOT_USER and MINIO_ROOT_PASSWORD environment variables in that same terminal session before running the minio server command.
# While it's working now, the benefit of using the minio_config.yaml is to centralize and manage your MinIO server's configuration (like custom addresses, logging levels, etc.) in a clear, version-controllable file.

minio server  /Users/rohityadav/ry_workspace/dev_ry_python_pipeline/python-airflow-snowflake-data-pipeline/minio_data


psql postgres # Connect to the default postgres database as the postgres user
CREATE USER airflow WITH PASSWORD 'airflow';
CREATE DATABASE airflow_db;
GRANT ALL PRIVILEGES ON DATABASE airflow_db TO airflow;
